"use strict";(self.webpackChunkvrcft_docs=self.webpackChunkvrcft_docs||[]).push([[8276],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>_});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=o,_=c["".concat(s,".").concat(d)]||c[d]||h[d]||i;return n?r.createElement(_,a(a({ref:t},p),{},{components:n})):r.createElement(_,a({ref:t},p))}));function _(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},65130:(e,t,n)=>{n.d(t,{b:()=>a,k:()=>l});var r=n(67294),o=n(902);const i=r.createContext(null);function a(e){let{children:t,content:n}=e;const o=function(e){return(0,r.useMemo)((()=>({metadata:e.metadata,frontMatter:e.frontMatter,assets:e.assets,contentTitle:e.contentTitle,toc:e.toc})),[e])}(n);return r.createElement(i.Provider,{value:o},t)}function l(){const e=(0,r.useContext)(i);if(null===e)throw new o.i6("DocProvider");return e}},43670:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294);const o=e=>{let{title:t,omitHeaders:n,disabledHeaders:o,headers:i,rows:a}=e;const[l,s]=(0,r.useState)(o?.map((e=>i.indexOf(e)))||[]),[u,p]=(0,r.useState)(""),[c,h]=(0,r.useState)(null),[d,_]=(0,r.useState)(!1),m=e=>{l.includes(e)?s(l.filter((t=>t!==e))):s([...l,e])},f=a.filter((e=>e.some((e=>{if(!c)return e?.toString&&e?.toString().includes(u);try{return e?.toString&&c.test(e.toString())}catch(t){return!1}}))));return r.createElement("div",null,r.createElement("input",{type:"text",placeholder:"Filter rows",value:u,onChange:e=>(e=>{p(e),_(!1);try{""!==e.trim()?h(new RegExp(e,"i")):h(null)}catch(t){_(!0),h(null)}})(e.target.value),className:"filter-input "+(d?"invalid":"")}),i.map(((e,t)=>n?.includes(e)?null:r.createElement("button",{key:t,onClick:()=>m(t),className:l.includes(t)?"disable":""},e))),r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,i.map(((e,t)=>n?.includes(e)?r.createElement("th",{key:t},e):r.createElement("th",{key:t,onClick:()=>m(t),className:l.includes(t)?"hidden":""},e))))),r.createElement("tbody",null,f.map(((e,t)=>r.createElement("tr",{key:t},e.map(((e,t)=>r.createElement("td",{key:t,className:l.includes(t)?"hidden":""},e)))))))))}},90351:(e,t,n)=>{n.d(t,{F4:()=>a,d9:()=>u,gm:()=>s,xb:()=>l,y$:()=>p});var r=n(65130),o=n(67294),i=n(52263);function a(e){let{children:t}=e;const{metadata:n}=(0,r.k)(),{editUrl:i}=n;return o.createElement("a",{href:i,target:"_blank",rel:"noopener noreferrer"},t)}function l(e){let{children:t,to:n,append:r=""}=e;const{siteConfig:a}=(0,i.Z)(),l=a.customFields[n.toLowerCase()];return o.createElement("a",{href:l.href+r,target:"_blank",rel:"noopener noreferrer"},t??l.label)}function s(e){let{children:t,cause:n}=e;return o.createElement("div",null,o.createElement("table",null,o.createElement("tbody",null,o.createElement("tr",null,o.createElement("td",null,o.createElement("strong",null,"Cause")),o.createElement("td",{style:{textAlign:"left",width:"100vh"}},n)),o.createElement("tr",null,o.createElement("td",null,o.createElement("strong",null,"Solution")),o.createElement("td",{style:{textAlign:"left",width:"100vh"}},t)))))}const u=e=>{let{children:t,color:n}=e;return o.createElement("span",{style:{color:n}},t)},p=e=>{let{children:t,color:n}=e;return o.createElement("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}},49469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>_,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var r=n(87462),o=n(67294),i=n(3905),a=(n(90351),n(43670));const l={sidebar_position:1,description:"Overview of what face tracking standards can express in Unified Expressions."},s="Tracking Standard Comparison Overview",u={unversionedId:"tutorial-avatars/tutorial-avatars-extras/compatibility/overview",id:"tutorial-avatars/tutorial-avatars-extras/compatibility/overview",title:"Tracking Standard Comparison Overview",description:"Overview of what face tracking standards can express in Unified Expressions.",source:"@site/docs/tutorial-avatars/tutorial-avatars-extras/compatibility/overview.mdx",sourceDirName:"tutorial-avatars/tutorial-avatars-extras/compatibility",slug:"/tutorial-avatars/tutorial-avatars-extras/compatibility/overview",permalink:"/docs/tutorial-avatars/tutorial-avatars-extras/compatibility/overview",draft:!1,editUrl:"https://github.com/VRCFaceTracking/docs/edit/master/docs/tutorial-avatars/tutorial-avatars-extras/compatibility/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Overview of what face tracking standards can express in Unified Expressions."},sidebar:"tutorialSidebar",previous:{title:"Compatibility",permalink:"/docs/category/compatibility"},next:{title:"Apple ARKit",permalink:"/docs/tutorial-avatars/tutorial-avatars-extras/compatibility/arkit"}},p={},c=[{value:"Standard Comparisons",id:"standard-comparisons",level:3},{value:"Standard Documentation",id:"standard-documentation",level:3}],h={toc:c},d="wrapper";function _(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tracking-standard-comparison-overview"},"Tracking Standard Comparison Overview"),(0,i.kt)("hr",null),(0,i.kt)("admonition",{title:"How to read this section",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This page goes over specific translations for each standard into\nUnified Expressions. For more concrete examples of each standard listed,\nplease refer to the appropriate standards' documentation."),(0,i.kt)("p",{parentName:"admonition"},"Base and Blended shapes from Unified Expressions will be matched directly with\nother standards' shapes. Some caveats such as unique shapes will be\ngiven more detailed explanations on how they can translate to Unified Expressions.")),(0,i.kt)("admonition",{title:"Table Explained",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This table provides a comprehensive understanding of the\nrelationship between various shapes and Unified Expressions:"),(0,i.kt)("p",{parentName:"admonition"},"When multiple shapes are listed in the same row, they\ncollaboratively contribute to the formation of a specific\nstandard shape."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"~")," indicates that the expression in a row is directly connected\nelsewhere."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"\u274c")," indicates that the expression in a row is not tracked."),(0,i.kt)("p",{parentName:"admonition"},"Some shapes have an extra condition (",(0,i.kt)("inlineCode",{parentName:"p"},"While X"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Negates X"),")\nthat indicates that specified cell needs the presence or absence\nof specific shapes to convey a specific expression accurately in\norder to correlate it to the other expressions in that row.\nThis often necessitates particular adjustments (animation\nor blendshape) for compatibility with Unified Expressions,\nwhile maintaining anatomical consistency within the given row."),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"While")," signifies that a standard requires a shape\nto be active to match the row."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Negates")," signifies that a standard requires a shape\nto be inactive to match the row.")),(0,i.kt)("p",{parentName:"admonition"},"Regardless of the conditions, the shape can be converted into\nUnified Expressions without compromising tracking quality or\nexpression behavior."),(0,i.kt)("p",{parentName:"admonition"},"This section only provides a generalized comparison across\nall standards; for more specific information refer to the\ndedicated sections for each standard.")),(0,i.kt)("h3",{id:"standard-comparisons"},"Standard Comparisons"),(0,i.kt)(a.Z,{title:"Standard Comparison Table",headers:["Unified","ARKit","SRanipal","Meta Movement (Quest Pro)"],omitHeaders:["Unified"],rows:[["EyeLookUpRight","eyeLookUpRight","Eye_Right_Look_Up","EYES_LOOK_UP_R"],["EyeLookDownRight","eyeLookDownRight","Eye_Right_Look_Down","EYES_LOOK_DOWN_R"],["EyeLookInRight","eyeLookInRight","Eye_Right_Left","EYES_LOOK_IN_R"],["EyeLookOutRight","eyeLookOutRight","Eye_Right_Right","EYES_LOOK_OUT_R"],["EyeLookUpLeft","eyeLookUpLeft","Eye_Left_Look_Up","EYES_LOOK_UP_L"],["EyeLookDownLeft","eyeLookDownLeft","Eye_Left_Look_Down","EYES_LOOK_DOWN_L"],["EyeLookInLeft","eyeLookInLeft","Eye_Left_Right","EYES_LOOK_IN_L"],["EyeLookOutLeft","eyeLookOutLeft","Eye_Left_Left","EYES_LOOK_OUT_L"],["EyeClosedRight","eyeBlinkRight","Eye_Left_Blink","EYES_CLOSED_R"],["EyeClosedLeft","eyeBlinkLeft","Eye_Left_Blink","EYES_CLOSED_L"],["EyeSquintRight","eyeSquintRight","~","EYES_SQUINT_R"],["EyeSquintLeft","eyeSquintLeft","~","EYES_SQUINT_R"],[(0,i.kt)(o.Fragment,null,(0,i.kt)("b",null,"BrowDownRight"),(0,i.kt)("br",null),"CheekSquintRight",(0,i.kt)("br",null),"EyeSquintRight",(0,i.kt)("br",null),(0,i.kt)("code",null,"While EyeClosedRight")),"~","Eye_Right_squeeze\xb9","~"],[(0,i.kt)(o.Fragment,null,(0,i.kt)("b",null,"BrowDownLeft"),(0,i.kt)("br",null),"CheekSquintLeft",(0,i.kt)("br",null),"EyeSquintLeft",(0,i.kt)("br",null),(0,i.kt)("code",null,"While EyeClosedLeft")),"~","Eye_Left_squeeze\xb9","~"],["EyeWideRight","eyeWideRight","Eye_Right_Wide","EYES_WIDEN_R"],["EyeWideLeft","eyeWideLeft","Eye_Left_Wide","EYES_WIDEN_L"],["EyeDilationRight","\u274c","Eye_Right_Dilation","\u274c"],["EyeDilationLeft","\u274c","Eye_Left_Dilation","\u274c"],["EyeConstrictRight","\u274c","Eye_Right_Constrict","\u274c"],["EyeConstrictLeft","\u274c","Eye_Left_Constrict","\u274c"],[(0,i.kt)("b",null,"BrowDownRight"),"browDownRight","\u274c","BROW_LOWERER_R"],[(0,i.kt)("b",null,"BrowDownLeft"),"browDownLeft","\u274c","BROW_LOWERER_L"],["BrowInnerUpRight","~","\u274c","INNER_BROW_RAISER_R"],["BrowInnerUpLeft","~","\u274c","INNER_BROW_RAISER_L"],[(0,i.kt)("b",null,"BrowInnerUp"),"browInnerUp","\u274c","~"],["BrowOuterUpRight","browOuterUpRight","\u274c","OUTER_BROW_RAISER_R"],["BrowOuterUpLeft","browOuterUpLeft","\u274c","OUTER_BROW_RAISER_L"],["NoseSneerRight","noseSneerRight","\u274c","NOSE_WRINKLER_R"],["NoseSneerLeft","noseSneerLeft","\u274c","NOSE_WRINKLER_L"],["CheekSquintRight","cheekSquintRight","~","CHEEK_RAISER_R"],["CheekSquintLeft","cheekSquintLeft","~","CHEEK_RAISER_L"],["CheekPuffRight","~","Cheek_Puff_Right","CHEEK_PUFF_R"],["CheekPuffLeft","~","Cheek_Puff_Left","CHEEK_PUFF_L"],[(0,i.kt)("b",null,"CheekPuff"),"cheekPuff","~","~"],["CheekSuckRight","\u274c","~","CHEEK_SUCK_R"],["CheekSuckLeft","\u274c","~","CHEEK_SUCK_L"],[(0,i.kt)("b",null,"CheekSuck"),"\u274c","Cheek_Suck","~"],["JawOpen","jawOpen","Jaw_Open","JAW_DROP"],["MouthClosed","mouthClose",(0,i.kt)(o.Fragment,null,"Mouth_Ape_Shape\xb9",(0,i.kt)("br",null),(0,i.kt)("code",null,"Negates Jaw_Open")),"LIPS_TOWARD"],["JawRight","jawRight","Jaw_Right","JAW_SIDEWAYS_RIGHT"],["JawLeft","jawLeft","Jaw_Left","JAW_SIDEWAYS_LEFT"],["JawForward","jawForward","Jaw_Forward","JAW_THRUST"],["LipSuckUpperRight","~","~","LIP_SUCK_RT"],["LipSuckUpperLeft","~","~","LIP_SUCK_LT"],[(0,i.kt)("b",null,"LipSuckUpper"),"mouthRollUpper","Mouth_Upper_Inside","~"],["LipSuckLowerRight","~","~","LIP_SUCK_RB"],["LipSuckLowerLeft","~","~","LIP_SUCK_LB"],[(0,i.kt)("b",null,"LipSuckLower"),"mouthRollLower","Mouth_Lower_Inside","~"],["LipFunnelUpperRight","~","~","LIP_FUNNELER_RT"],["LipFunnelUpperLeft","~","~","LIP_FUNNELER_LT"],[(0,i.kt)("b",null,"LipFunnelUpper"),"~","Mouth_Upper_Overturn\xb9","~"],["LipFunnelLowerRight","~","~","LIP_SUCK_RB"],["LipFunnelLowerLeft","~","~","LIP_SUCK_LB"],[(0,i.kt)("b",null,"LipFunnelLower"),"~","Mouth_Lower_Overturn\xb9","~"],[(0,i.kt)("b",null,"LipFunnel"),"mouthFunnel","~","~"],[(0,i.kt)(o.Fragment,null,"LipPuckerUpperRight",(0,i.kt)("br",null),"LipPuckerLowerRight"),"~","~","LIP_PUCKER_R"],[(0,i.kt)(o.Fragment,null,"LipPuckerUpperLeft",(0,i.kt)("br",null),"LipPuckerLowerLeft"),"~","~","LIP_PUCKER_L"],[(0,i.kt)("b",null,"LipPucker"),"mouthPucker","Mouth_Pout",""],["MouthUpperUpRight","mouthUpperUpRight","Mouth_Upper_Up_Right","UPPER_LIP_RAISER_R"],["MouthUpperUpLeft","mouthUpperUpLeft","Mouth_Upper_Up_Left","UPPER_LIP_RAISER_L"],["MouthLowerDownRight","mouthLowerUpRight","Mouth_Lower_Down_Right","LOWER_LIP_DEPRESSOR_R"],["MouthLowerDownLeft","mouthLowerUpLeft","Mouth_Lower_Down_Left","LOWER_LIP_DEPRESSER_L"],[(0,i.kt)("b",null,"MouthSmileRight"),"mouthSmileRight","Mouth_Smile_Right","LIP_CORNER_PULLER_R"],[(0,i.kt)("b",null,"MouthSmileLeft"),"mouthSmileLeft","Mouth_Smile_Left","LIP_CORNER_PULLER_L"],["MouthFrownRight","mouthFrownRight","~","LIP_CORNER_DEPRESSOR_R"],["MouthFrownLeft","mouthFrownLeft","~","LIP_CORNER_DEPRESSOR_L"],[(0,i.kt)("b",null,"MouthSadRight"),"~","Mouth_Sad_Right","~"],[(0,i.kt)("b",null,"MouthSadLeft"),"~","Mouth_Sad_Left","~"],["MouthStretchRight","mouthStretchRight","~","LIP_STRETCHER_R"],["MouthStretchLeft","mouthStretchLeft","~","LIP_STRETCHER_L"],["MouthDimplerRight","mouthDimpleRight","~","DIMPLER_R"],["MouthDimplerLeft","mouthDimpleLeft","~","DIMPLER_L"],["MouthRaiserUpper","mouthShrugUpper","\u274c","CHIN_RAISER_T"],["MouthRaiserLower","mouthShrugLower","Mouth_Lower_Overlay","CHIN_RAISER_B"],["MouthPressRight","mouthPressRight\xb9","\u274c","LIP_PRESSOR_R"],["MouthPressLeft","mouthPressLeft\xb9","\u274c","LIP_PRESSOR_L"],["MouthTightenerRight","\u274c","\u274c","LIP_TIGHTENER_R"],["MouthTightenerLeft","\u274c","\u274c","LIP_TIGHTENER_L"],["TongueOut","tongueOut",(0,i.kt)(o.Fragment,null,"Tongue_LongStep1",(0,i.kt)("br",null),"Tongue_LongStep2"),"TONGUE_OUT"],["TongueUp","\u274c","Tongue_Up","\u274c"],["TongueDown","\u274c","Tongue_Down","\u274c"],["TongueRight","\u274c","Tongue_Right","\u274c"],["TongueLeft","\u274c","Tongue_Left","\u274c"],["TongueRoll","\u274c","Tongue_Roll","\u274c"]],mdxType:"FilterTable"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\xb9 Requires the use of a specialized animation setup to work with VRCFT V2 tracking."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("b",null,"Bold")," Blended Shape.")),(0,i.kt)("h3",{id:"standard-documentation"},"Standard Documentation"),(0,i.kt)(a.Z,{title:"Standard Comparison Table",headers:["Standard","Link"],omitHeaders:["Standard","Link"],rows:[["Unified Expressions",(0,i.kt)(o.Fragment,null,(0,i.kt)("a",{href:"../unified-blendshapes"},"VRCFT Documentation"))],["ARKit",(0,i.kt)(o.Fragment,null,(0,i.kt)("a",{href:"https://developer.apple.com/documentation/arkit/arfaceanchor/blendshapelocation"},"Apple Developer Documentation"),(0,i.kt)("br",null),(0,i.kt)("a",{href:"https://arkit-face-blendshapes.com/"},"ARKit Shape References (Unofficial)"))],["VIVE SRanipal",(0,i.kt)(o.Fragment,null,(0,i.kt)("a",{href:"https://developer.vive.com/resources/vive-sense/eye-and-facial-tracking-sdk/documentation/"},"VIVE Developer Resource"),(0,i.kt)("br",null),(0,i.kt)("a",{href:"../../../v4.0/category/intermediate"},"VRCFT v4.0 Documentation"))],["Meta Movement",(0,i.kt)(o.Fragment,null,(0,i.kt)("a",{href:"https://developer.oculus.com/documentation/native/android/move-ref-blendshapes/"},"Blendshape Visual Reference for Movement"))]],mdxType:"FilterTable"}))}_.isMDXComponent=!0}}]);